/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.github.ogomezso.springkafka.infrastructure.model.ticket;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Header extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5836690987182913840L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Header\",\"namespace\":\"org.github.ogomezso.springkafka.infrastructure.model.ticket\",\"fields\":[{\"name\":\"invoiceDuration\",\"type\":\"int\"},{\"name\":\"paymentDuration\",\"type\":\"int\"},{\"name\":\"employeeId\",\"type\":\"string\"},{\"name\":\"ticketHour\",\"type\":\"int\"},{\"name\":\"totalTicketAmount\",\"type\":\"string\"},{\"name\":\"ticketTypeId\",\"type\":\"string\"},{\"name\":\"OriginStoreTicket\",\"type\":{\"type\":\"record\",\"name\":\"OriginStoreTicket\",\"fields\":[{\"name\":\"ticketDate\",\"type\":\"string\"},{\"name\":\"storePublicId\",\"type\":\"string\"},{\"name\":\"ticketNumber\",\"type\":\"string\"},{\"name\":\"posId\",\"type\":\"string\"}]}},{\"name\":\"returnStoreTicket\",\"type\":{\"type\":\"record\",\"name\":\"ReturnStoreTicket\",\"fields\":[{\"name\":\"ticketDate\",\"type\":\"string\"},{\"name\":\"storePublicId\",\"type\":\"string\"},{\"name\":\"ticketNumber\",\"type\":\"string\"},{\"name\":\"posId\",\"type\":\"string\"}]}},{\"name\":\"deliveryNotePosId\",\"type\":\"string\"},{\"name\":\"deliveryNoteNumber\",\"type\":\"string\"},{\"name\":\"deliveryNoteDate\",\"type\":\"string\"},{\"name\":\"teleSalesOrderNumber\",\"type\":\"string\"},{\"name\":\"isParked\",\"type\":\"boolean\"},{\"name\":\"transactionTypeId\",\"type\":\"string\"},{\"name\":\"salesChannelId\",\"type\":\"string\"},{\"name\":\"storeTypeId\",\"type\":\"string\"},{\"name\":\"storeAddress\",\"type\":\"string\"},{\"name\":\"storeZipCode\",\"type\":\"string\"},{\"name\":\"storeCity\",\"type\":\"string\"},{\"name\":\"storePhone\",\"type\":\"string\"},{\"name\":\"barcode\",\"type\":\"string\"},{\"name\":\"certificationCode\",\"type\":\"string\"},{\"name\":\"isDigitalTicket\",\"type\":\"boolean\"},{\"name\":\"companyName\",\"type\":\"string\"},{\"name\":\"companyVatNumber\",\"type\":\"string\"},{\"name\":\"locale\",\"type\":\"string\"},{\"name\":\"encodedCustomerId\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Header> ENCODER =
      new BinaryMessageEncoder<Header>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Header> DECODER =
      new BinaryMessageDecoder<Header>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Header> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Header> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Header> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Header>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Header to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Header from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Header instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Header fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private int invoiceDuration;
  private int paymentDuration;
  private java.lang.CharSequence employeeId;
  private int ticketHour;
  private java.lang.CharSequence totalTicketAmount;
  private java.lang.CharSequence ticketTypeId;
  private org.github.ogomezso.springkafka.infrastructure.model.ticket.OriginStoreTicket OriginStoreTicket;
  private org.github.ogomezso.springkafka.infrastructure.model.ticket.ReturnStoreTicket returnStoreTicket;
  private java.lang.CharSequence deliveryNotePosId;
  private java.lang.CharSequence deliveryNoteNumber;
  private java.lang.CharSequence deliveryNoteDate;
  private java.lang.CharSequence teleSalesOrderNumber;
  private boolean isParked;
  private java.lang.CharSequence transactionTypeId;
  private java.lang.CharSequence salesChannelId;
  private java.lang.CharSequence storeTypeId;
  private java.lang.CharSequence storeAddress;
  private java.lang.CharSequence storeZipCode;
  private java.lang.CharSequence storeCity;
  private java.lang.CharSequence storePhone;
  private java.lang.CharSequence barcode;
  private java.lang.CharSequence certificationCode;
  private boolean isDigitalTicket;
  private java.lang.CharSequence companyName;
  private java.lang.CharSequence companyVatNumber;
  private java.lang.CharSequence locale;
  private java.lang.CharSequence encodedCustomerId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Header() {}

  /**
   * All-args constructor.
   * @param invoiceDuration The new value for invoiceDuration
   * @param paymentDuration The new value for paymentDuration
   * @param employeeId The new value for employeeId
   * @param ticketHour The new value for ticketHour
   * @param totalTicketAmount The new value for totalTicketAmount
   * @param ticketTypeId The new value for ticketTypeId
   * @param OriginStoreTicket The new value for OriginStoreTicket
   * @param returnStoreTicket The new value for returnStoreTicket
   * @param deliveryNotePosId The new value for deliveryNotePosId
   * @param deliveryNoteNumber The new value for deliveryNoteNumber
   * @param deliveryNoteDate The new value for deliveryNoteDate
   * @param teleSalesOrderNumber The new value for teleSalesOrderNumber
   * @param isParked The new value for isParked
   * @param transactionTypeId The new value for transactionTypeId
   * @param salesChannelId The new value for salesChannelId
   * @param storeTypeId The new value for storeTypeId
   * @param storeAddress The new value for storeAddress
   * @param storeZipCode The new value for storeZipCode
   * @param storeCity The new value for storeCity
   * @param storePhone The new value for storePhone
   * @param barcode The new value for barcode
   * @param certificationCode The new value for certificationCode
   * @param isDigitalTicket The new value for isDigitalTicket
   * @param companyName The new value for companyName
   * @param companyVatNumber The new value for companyVatNumber
   * @param locale The new value for locale
   * @param encodedCustomerId The new value for encodedCustomerId
   */
  public Header(java.lang.Integer invoiceDuration, java.lang.Integer paymentDuration, java.lang.CharSequence employeeId, java.lang.Integer ticketHour, java.lang.CharSequence totalTicketAmount, java.lang.CharSequence ticketTypeId, org.github.ogomezso.springkafka.infrastructure.model.ticket.OriginStoreTicket OriginStoreTicket, org.github.ogomezso.springkafka.infrastructure.model.ticket.ReturnStoreTicket returnStoreTicket, java.lang.CharSequence deliveryNotePosId, java.lang.CharSequence deliveryNoteNumber, java.lang.CharSequence deliveryNoteDate, java.lang.CharSequence teleSalesOrderNumber, java.lang.Boolean isParked, java.lang.CharSequence transactionTypeId, java.lang.CharSequence salesChannelId, java.lang.CharSequence storeTypeId, java.lang.CharSequence storeAddress, java.lang.CharSequence storeZipCode, java.lang.CharSequence storeCity, java.lang.CharSequence storePhone, java.lang.CharSequence barcode, java.lang.CharSequence certificationCode, java.lang.Boolean isDigitalTicket, java.lang.CharSequence companyName, java.lang.CharSequence companyVatNumber, java.lang.CharSequence locale, java.lang.CharSequence encodedCustomerId) {
    this.invoiceDuration = invoiceDuration;
    this.paymentDuration = paymentDuration;
    this.employeeId = employeeId;
    this.ticketHour = ticketHour;
    this.totalTicketAmount = totalTicketAmount;
    this.ticketTypeId = ticketTypeId;
    this.OriginStoreTicket = OriginStoreTicket;
    this.returnStoreTicket = returnStoreTicket;
    this.deliveryNotePosId = deliveryNotePosId;
    this.deliveryNoteNumber = deliveryNoteNumber;
    this.deliveryNoteDate = deliveryNoteDate;
    this.teleSalesOrderNumber = teleSalesOrderNumber;
    this.isParked = isParked;
    this.transactionTypeId = transactionTypeId;
    this.salesChannelId = salesChannelId;
    this.storeTypeId = storeTypeId;
    this.storeAddress = storeAddress;
    this.storeZipCode = storeZipCode;
    this.storeCity = storeCity;
    this.storePhone = storePhone;
    this.barcode = barcode;
    this.certificationCode = certificationCode;
    this.isDigitalTicket = isDigitalTicket;
    this.companyName = companyName;
    this.companyVatNumber = companyVatNumber;
    this.locale = locale;
    this.encodedCustomerId = encodedCustomerId;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return invoiceDuration;
    case 1: return paymentDuration;
    case 2: return employeeId;
    case 3: return ticketHour;
    case 4: return totalTicketAmount;
    case 5: return ticketTypeId;
    case 6: return OriginStoreTicket;
    case 7: return returnStoreTicket;
    case 8: return deliveryNotePosId;
    case 9: return deliveryNoteNumber;
    case 10: return deliveryNoteDate;
    case 11: return teleSalesOrderNumber;
    case 12: return isParked;
    case 13: return transactionTypeId;
    case 14: return salesChannelId;
    case 15: return storeTypeId;
    case 16: return storeAddress;
    case 17: return storeZipCode;
    case 18: return storeCity;
    case 19: return storePhone;
    case 20: return barcode;
    case 21: return certificationCode;
    case 22: return isDigitalTicket;
    case 23: return companyName;
    case 24: return companyVatNumber;
    case 25: return locale;
    case 26: return encodedCustomerId;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: invoiceDuration = (java.lang.Integer)value$; break;
    case 1: paymentDuration = (java.lang.Integer)value$; break;
    case 2: employeeId = (java.lang.CharSequence)value$; break;
    case 3: ticketHour = (java.lang.Integer)value$; break;
    case 4: totalTicketAmount = (java.lang.CharSequence)value$; break;
    case 5: ticketTypeId = (java.lang.CharSequence)value$; break;
    case 6: OriginStoreTicket = (org.github.ogomezso.springkafka.infrastructure.model.ticket.OriginStoreTicket)value$; break;
    case 7: returnStoreTicket = (org.github.ogomezso.springkafka.infrastructure.model.ticket.ReturnStoreTicket)value$; break;
    case 8: deliveryNotePosId = (java.lang.CharSequence)value$; break;
    case 9: deliveryNoteNumber = (java.lang.CharSequence)value$; break;
    case 10: deliveryNoteDate = (java.lang.CharSequence)value$; break;
    case 11: teleSalesOrderNumber = (java.lang.CharSequence)value$; break;
    case 12: isParked = (java.lang.Boolean)value$; break;
    case 13: transactionTypeId = (java.lang.CharSequence)value$; break;
    case 14: salesChannelId = (java.lang.CharSequence)value$; break;
    case 15: storeTypeId = (java.lang.CharSequence)value$; break;
    case 16: storeAddress = (java.lang.CharSequence)value$; break;
    case 17: storeZipCode = (java.lang.CharSequence)value$; break;
    case 18: storeCity = (java.lang.CharSequence)value$; break;
    case 19: storePhone = (java.lang.CharSequence)value$; break;
    case 20: barcode = (java.lang.CharSequence)value$; break;
    case 21: certificationCode = (java.lang.CharSequence)value$; break;
    case 22: isDigitalTicket = (java.lang.Boolean)value$; break;
    case 23: companyName = (java.lang.CharSequence)value$; break;
    case 24: companyVatNumber = (java.lang.CharSequence)value$; break;
    case 25: locale = (java.lang.CharSequence)value$; break;
    case 26: encodedCustomerId = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'invoiceDuration' field.
   * @return The value of the 'invoiceDuration' field.
   */
  public int getInvoiceDuration() {
    return invoiceDuration;
  }


  /**
   * Sets the value of the 'invoiceDuration' field.
   * @param value the value to set.
   */
  public void setInvoiceDuration(int value) {
    this.invoiceDuration = value;
  }

  /**
   * Gets the value of the 'paymentDuration' field.
   * @return The value of the 'paymentDuration' field.
   */
  public int getPaymentDuration() {
    return paymentDuration;
  }


  /**
   * Sets the value of the 'paymentDuration' field.
   * @param value the value to set.
   */
  public void setPaymentDuration(int value) {
    this.paymentDuration = value;
  }

  /**
   * Gets the value of the 'employeeId' field.
   * @return The value of the 'employeeId' field.
   */
  public java.lang.CharSequence getEmployeeId() {
    return employeeId;
  }


  /**
   * Sets the value of the 'employeeId' field.
   * @param value the value to set.
   */
  public void setEmployeeId(java.lang.CharSequence value) {
    this.employeeId = value;
  }

  /**
   * Gets the value of the 'ticketHour' field.
   * @return The value of the 'ticketHour' field.
   */
  public int getTicketHour() {
    return ticketHour;
  }


  /**
   * Sets the value of the 'ticketHour' field.
   * @param value the value to set.
   */
  public void setTicketHour(int value) {
    this.ticketHour = value;
  }

  /**
   * Gets the value of the 'totalTicketAmount' field.
   * @return The value of the 'totalTicketAmount' field.
   */
  public java.lang.CharSequence getTotalTicketAmount() {
    return totalTicketAmount;
  }


  /**
   * Sets the value of the 'totalTicketAmount' field.
   * @param value the value to set.
   */
  public void setTotalTicketAmount(java.lang.CharSequence value) {
    this.totalTicketAmount = value;
  }

  /**
   * Gets the value of the 'ticketTypeId' field.
   * @return The value of the 'ticketTypeId' field.
   */
  public java.lang.CharSequence getTicketTypeId() {
    return ticketTypeId;
  }


  /**
   * Sets the value of the 'ticketTypeId' field.
   * @param value the value to set.
   */
  public void setTicketTypeId(java.lang.CharSequence value) {
    this.ticketTypeId = value;
  }

  /**
   * Gets the value of the 'OriginStoreTicket' field.
   * @return The value of the 'OriginStoreTicket' field.
   */
  public org.github.ogomezso.springkafka.infrastructure.model.ticket.OriginStoreTicket getOriginStoreTicket() {
    return OriginStoreTicket;
  }


  /**
   * Sets the value of the 'OriginStoreTicket' field.
   * @param value the value to set.
   */
  public void setOriginStoreTicket(org.github.ogomezso.springkafka.infrastructure.model.ticket.OriginStoreTicket value) {
    this.OriginStoreTicket = value;
  }

  /**
   * Gets the value of the 'returnStoreTicket' field.
   * @return The value of the 'returnStoreTicket' field.
   */
  public org.github.ogomezso.springkafka.infrastructure.model.ticket.ReturnStoreTicket getReturnStoreTicket() {
    return returnStoreTicket;
  }


  /**
   * Sets the value of the 'returnStoreTicket' field.
   * @param value the value to set.
   */
  public void setReturnStoreTicket(org.github.ogomezso.springkafka.infrastructure.model.ticket.ReturnStoreTicket value) {
    this.returnStoreTicket = value;
  }

  /**
   * Gets the value of the 'deliveryNotePosId' field.
   * @return The value of the 'deliveryNotePosId' field.
   */
  public java.lang.CharSequence getDeliveryNotePosId() {
    return deliveryNotePosId;
  }


  /**
   * Sets the value of the 'deliveryNotePosId' field.
   * @param value the value to set.
   */
  public void setDeliveryNotePosId(java.lang.CharSequence value) {
    this.deliveryNotePosId = value;
  }

  /**
   * Gets the value of the 'deliveryNoteNumber' field.
   * @return The value of the 'deliveryNoteNumber' field.
   */
  public java.lang.CharSequence getDeliveryNoteNumber() {
    return deliveryNoteNumber;
  }


  /**
   * Sets the value of the 'deliveryNoteNumber' field.
   * @param value the value to set.
   */
  public void setDeliveryNoteNumber(java.lang.CharSequence value) {
    this.deliveryNoteNumber = value;
  }

  /**
   * Gets the value of the 'deliveryNoteDate' field.
   * @return The value of the 'deliveryNoteDate' field.
   */
  public java.lang.CharSequence getDeliveryNoteDate() {
    return deliveryNoteDate;
  }


  /**
   * Sets the value of the 'deliveryNoteDate' field.
   * @param value the value to set.
   */
  public void setDeliveryNoteDate(java.lang.CharSequence value) {
    this.deliveryNoteDate = value;
  }

  /**
   * Gets the value of the 'teleSalesOrderNumber' field.
   * @return The value of the 'teleSalesOrderNumber' field.
   */
  public java.lang.CharSequence getTeleSalesOrderNumber() {
    return teleSalesOrderNumber;
  }


  /**
   * Sets the value of the 'teleSalesOrderNumber' field.
   * @param value the value to set.
   */
  public void setTeleSalesOrderNumber(java.lang.CharSequence value) {
    this.teleSalesOrderNumber = value;
  }

  /**
   * Gets the value of the 'isParked' field.
   * @return The value of the 'isParked' field.
   */
  public boolean getIsParked() {
    return isParked;
  }


  /**
   * Sets the value of the 'isParked' field.
   * @param value the value to set.
   */
  public void setIsParked(boolean value) {
    this.isParked = value;
  }

  /**
   * Gets the value of the 'transactionTypeId' field.
   * @return The value of the 'transactionTypeId' field.
   */
  public java.lang.CharSequence getTransactionTypeId() {
    return transactionTypeId;
  }


  /**
   * Sets the value of the 'transactionTypeId' field.
   * @param value the value to set.
   */
  public void setTransactionTypeId(java.lang.CharSequence value) {
    this.transactionTypeId = value;
  }

  /**
   * Gets the value of the 'salesChannelId' field.
   * @return The value of the 'salesChannelId' field.
   */
  public java.lang.CharSequence getSalesChannelId() {
    return salesChannelId;
  }


  /**
   * Sets the value of the 'salesChannelId' field.
   * @param value the value to set.
   */
  public void setSalesChannelId(java.lang.CharSequence value) {
    this.salesChannelId = value;
  }

  /**
   * Gets the value of the 'storeTypeId' field.
   * @return The value of the 'storeTypeId' field.
   */
  public java.lang.CharSequence getStoreTypeId() {
    return storeTypeId;
  }


  /**
   * Sets the value of the 'storeTypeId' field.
   * @param value the value to set.
   */
  public void setStoreTypeId(java.lang.CharSequence value) {
    this.storeTypeId = value;
  }

  /**
   * Gets the value of the 'storeAddress' field.
   * @return The value of the 'storeAddress' field.
   */
  public java.lang.CharSequence getStoreAddress() {
    return storeAddress;
  }


  /**
   * Sets the value of the 'storeAddress' field.
   * @param value the value to set.
   */
  public void setStoreAddress(java.lang.CharSequence value) {
    this.storeAddress = value;
  }

  /**
   * Gets the value of the 'storeZipCode' field.
   * @return The value of the 'storeZipCode' field.
   */
  public java.lang.CharSequence getStoreZipCode() {
    return storeZipCode;
  }


  /**
   * Sets the value of the 'storeZipCode' field.
   * @param value the value to set.
   */
  public void setStoreZipCode(java.lang.CharSequence value) {
    this.storeZipCode = value;
  }

  /**
   * Gets the value of the 'storeCity' field.
   * @return The value of the 'storeCity' field.
   */
  public java.lang.CharSequence getStoreCity() {
    return storeCity;
  }


  /**
   * Sets the value of the 'storeCity' field.
   * @param value the value to set.
   */
  public void setStoreCity(java.lang.CharSequence value) {
    this.storeCity = value;
  }

  /**
   * Gets the value of the 'storePhone' field.
   * @return The value of the 'storePhone' field.
   */
  public java.lang.CharSequence getStorePhone() {
    return storePhone;
  }


  /**
   * Sets the value of the 'storePhone' field.
   * @param value the value to set.
   */
  public void setStorePhone(java.lang.CharSequence value) {
    this.storePhone = value;
  }

  /**
   * Gets the value of the 'barcode' field.
   * @return The value of the 'barcode' field.
   */
  public java.lang.CharSequence getBarcode() {
    return barcode;
  }


  /**
   * Sets the value of the 'barcode' field.
   * @param value the value to set.
   */
  public void setBarcode(java.lang.CharSequence value) {
    this.barcode = value;
  }

  /**
   * Gets the value of the 'certificationCode' field.
   * @return The value of the 'certificationCode' field.
   */
  public java.lang.CharSequence getCertificationCode() {
    return certificationCode;
  }


  /**
   * Sets the value of the 'certificationCode' field.
   * @param value the value to set.
   */
  public void setCertificationCode(java.lang.CharSequence value) {
    this.certificationCode = value;
  }

  /**
   * Gets the value of the 'isDigitalTicket' field.
   * @return The value of the 'isDigitalTicket' field.
   */
  public boolean getIsDigitalTicket() {
    return isDigitalTicket;
  }


  /**
   * Sets the value of the 'isDigitalTicket' field.
   * @param value the value to set.
   */
  public void setIsDigitalTicket(boolean value) {
    this.isDigitalTicket = value;
  }

  /**
   * Gets the value of the 'companyName' field.
   * @return The value of the 'companyName' field.
   */
  public java.lang.CharSequence getCompanyName() {
    return companyName;
  }


  /**
   * Sets the value of the 'companyName' field.
   * @param value the value to set.
   */
  public void setCompanyName(java.lang.CharSequence value) {
    this.companyName = value;
  }

  /**
   * Gets the value of the 'companyVatNumber' field.
   * @return The value of the 'companyVatNumber' field.
   */
  public java.lang.CharSequence getCompanyVatNumber() {
    return companyVatNumber;
  }


  /**
   * Sets the value of the 'companyVatNumber' field.
   * @param value the value to set.
   */
  public void setCompanyVatNumber(java.lang.CharSequence value) {
    this.companyVatNumber = value;
  }

  /**
   * Gets the value of the 'locale' field.
   * @return The value of the 'locale' field.
   */
  public java.lang.CharSequence getLocale() {
    return locale;
  }


  /**
   * Sets the value of the 'locale' field.
   * @param value the value to set.
   */
  public void setLocale(java.lang.CharSequence value) {
    this.locale = value;
  }

  /**
   * Gets the value of the 'encodedCustomerId' field.
   * @return The value of the 'encodedCustomerId' field.
   */
  public java.lang.CharSequence getEncodedCustomerId() {
    return encodedCustomerId;
  }


  /**
   * Sets the value of the 'encodedCustomerId' field.
   * @param value the value to set.
   */
  public void setEncodedCustomerId(java.lang.CharSequence value) {
    this.encodedCustomerId = value;
  }

  /**
   * Creates a new Header RecordBuilder.
   * @return A new Header RecordBuilder
   */
  public static org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder newBuilder() {
    return new org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder();
  }

  /**
   * Creates a new Header RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Header RecordBuilder
   */
  public static org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder newBuilder(org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder other) {
    if (other == null) {
      return new org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder();
    } else {
      return new org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder(other);
    }
  }

  /**
   * Creates a new Header RecordBuilder by copying an existing Header instance.
   * @param other The existing instance to copy.
   * @return A new Header RecordBuilder
   */
  public static org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder newBuilder(org.github.ogomezso.springkafka.infrastructure.model.ticket.Header other) {
    if (other == null) {
      return new org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder();
    } else {
      return new org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder(other);
    }
  }

  /**
   * RecordBuilder for Header instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Header>
    implements org.apache.avro.data.RecordBuilder<Header> {

    private int invoiceDuration;
    private int paymentDuration;
    private java.lang.CharSequence employeeId;
    private int ticketHour;
    private java.lang.CharSequence totalTicketAmount;
    private java.lang.CharSequence ticketTypeId;
    private org.github.ogomezso.springkafka.infrastructure.model.ticket.OriginStoreTicket OriginStoreTicket;
    private org.github.ogomezso.springkafka.infrastructure.model.ticket.OriginStoreTicket.Builder OriginStoreTicketBuilder;
    private org.github.ogomezso.springkafka.infrastructure.model.ticket.ReturnStoreTicket returnStoreTicket;
    private org.github.ogomezso.springkafka.infrastructure.model.ticket.ReturnStoreTicket.Builder returnStoreTicketBuilder;
    private java.lang.CharSequence deliveryNotePosId;
    private java.lang.CharSequence deliveryNoteNumber;
    private java.lang.CharSequence deliveryNoteDate;
    private java.lang.CharSequence teleSalesOrderNumber;
    private boolean isParked;
    private java.lang.CharSequence transactionTypeId;
    private java.lang.CharSequence salesChannelId;
    private java.lang.CharSequence storeTypeId;
    private java.lang.CharSequence storeAddress;
    private java.lang.CharSequence storeZipCode;
    private java.lang.CharSequence storeCity;
    private java.lang.CharSequence storePhone;
    private java.lang.CharSequence barcode;
    private java.lang.CharSequence certificationCode;
    private boolean isDigitalTicket;
    private java.lang.CharSequence companyName;
    private java.lang.CharSequence companyVatNumber;
    private java.lang.CharSequence locale;
    private java.lang.CharSequence encodedCustomerId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.invoiceDuration)) {
        this.invoiceDuration = data().deepCopy(fields()[0].schema(), other.invoiceDuration);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.paymentDuration)) {
        this.paymentDuration = data().deepCopy(fields()[1].schema(), other.paymentDuration);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.employeeId)) {
        this.employeeId = data().deepCopy(fields()[2].schema(), other.employeeId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.ticketHour)) {
        this.ticketHour = data().deepCopy(fields()[3].schema(), other.ticketHour);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.totalTicketAmount)) {
        this.totalTicketAmount = data().deepCopy(fields()[4].schema(), other.totalTicketAmount);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.ticketTypeId)) {
        this.ticketTypeId = data().deepCopy(fields()[5].schema(), other.ticketTypeId);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.OriginStoreTicket)) {
        this.OriginStoreTicket = data().deepCopy(fields()[6].schema(), other.OriginStoreTicket);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (other.hasOriginStoreTicketBuilder()) {
        this.OriginStoreTicketBuilder = org.github.ogomezso.springkafka.infrastructure.model.ticket.OriginStoreTicket.newBuilder(other.getOriginStoreTicketBuilder());
      }
      if (isValidValue(fields()[7], other.returnStoreTicket)) {
        this.returnStoreTicket = data().deepCopy(fields()[7].schema(), other.returnStoreTicket);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (other.hasReturnStoreTicketBuilder()) {
        this.returnStoreTicketBuilder = org.github.ogomezso.springkafka.infrastructure.model.ticket.ReturnStoreTicket.newBuilder(other.getReturnStoreTicketBuilder());
      }
      if (isValidValue(fields()[8], other.deliveryNotePosId)) {
        this.deliveryNotePosId = data().deepCopy(fields()[8].schema(), other.deliveryNotePosId);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.deliveryNoteNumber)) {
        this.deliveryNoteNumber = data().deepCopy(fields()[9].schema(), other.deliveryNoteNumber);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.deliveryNoteDate)) {
        this.deliveryNoteDate = data().deepCopy(fields()[10].schema(), other.deliveryNoteDate);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.teleSalesOrderNumber)) {
        this.teleSalesOrderNumber = data().deepCopy(fields()[11].schema(), other.teleSalesOrderNumber);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.isParked)) {
        this.isParked = data().deepCopy(fields()[12].schema(), other.isParked);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.transactionTypeId)) {
        this.transactionTypeId = data().deepCopy(fields()[13].schema(), other.transactionTypeId);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.salesChannelId)) {
        this.salesChannelId = data().deepCopy(fields()[14].schema(), other.salesChannelId);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.storeTypeId)) {
        this.storeTypeId = data().deepCopy(fields()[15].schema(), other.storeTypeId);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.storeAddress)) {
        this.storeAddress = data().deepCopy(fields()[16].schema(), other.storeAddress);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.storeZipCode)) {
        this.storeZipCode = data().deepCopy(fields()[17].schema(), other.storeZipCode);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.storeCity)) {
        this.storeCity = data().deepCopy(fields()[18].schema(), other.storeCity);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.storePhone)) {
        this.storePhone = data().deepCopy(fields()[19].schema(), other.storePhone);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.barcode)) {
        this.barcode = data().deepCopy(fields()[20].schema(), other.barcode);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.certificationCode)) {
        this.certificationCode = data().deepCopy(fields()[21].schema(), other.certificationCode);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.isDigitalTicket)) {
        this.isDigitalTicket = data().deepCopy(fields()[22].schema(), other.isDigitalTicket);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.companyName)) {
        this.companyName = data().deepCopy(fields()[23].schema(), other.companyName);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.companyVatNumber)) {
        this.companyVatNumber = data().deepCopy(fields()[24].schema(), other.companyVatNumber);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.locale)) {
        this.locale = data().deepCopy(fields()[25].schema(), other.locale);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.encodedCustomerId)) {
        this.encodedCustomerId = data().deepCopy(fields()[26].schema(), other.encodedCustomerId);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
    }

    /**
     * Creates a Builder by copying an existing Header instance
     * @param other The existing instance to copy.
     */
    private Builder(org.github.ogomezso.springkafka.infrastructure.model.ticket.Header other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.invoiceDuration)) {
        this.invoiceDuration = data().deepCopy(fields()[0].schema(), other.invoiceDuration);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.paymentDuration)) {
        this.paymentDuration = data().deepCopy(fields()[1].schema(), other.paymentDuration);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.employeeId)) {
        this.employeeId = data().deepCopy(fields()[2].schema(), other.employeeId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ticketHour)) {
        this.ticketHour = data().deepCopy(fields()[3].schema(), other.ticketHour);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.totalTicketAmount)) {
        this.totalTicketAmount = data().deepCopy(fields()[4].schema(), other.totalTicketAmount);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.ticketTypeId)) {
        this.ticketTypeId = data().deepCopy(fields()[5].schema(), other.ticketTypeId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.OriginStoreTicket)) {
        this.OriginStoreTicket = data().deepCopy(fields()[6].schema(), other.OriginStoreTicket);
        fieldSetFlags()[6] = true;
      }
      this.OriginStoreTicketBuilder = null;
      if (isValidValue(fields()[7], other.returnStoreTicket)) {
        this.returnStoreTicket = data().deepCopy(fields()[7].schema(), other.returnStoreTicket);
        fieldSetFlags()[7] = true;
      }
      this.returnStoreTicketBuilder = null;
      if (isValidValue(fields()[8], other.deliveryNotePosId)) {
        this.deliveryNotePosId = data().deepCopy(fields()[8].schema(), other.deliveryNotePosId);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.deliveryNoteNumber)) {
        this.deliveryNoteNumber = data().deepCopy(fields()[9].schema(), other.deliveryNoteNumber);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.deliveryNoteDate)) {
        this.deliveryNoteDate = data().deepCopy(fields()[10].schema(), other.deliveryNoteDate);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.teleSalesOrderNumber)) {
        this.teleSalesOrderNumber = data().deepCopy(fields()[11].schema(), other.teleSalesOrderNumber);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.isParked)) {
        this.isParked = data().deepCopy(fields()[12].schema(), other.isParked);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.transactionTypeId)) {
        this.transactionTypeId = data().deepCopy(fields()[13].schema(), other.transactionTypeId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.salesChannelId)) {
        this.salesChannelId = data().deepCopy(fields()[14].schema(), other.salesChannelId);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.storeTypeId)) {
        this.storeTypeId = data().deepCopy(fields()[15].schema(), other.storeTypeId);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.storeAddress)) {
        this.storeAddress = data().deepCopy(fields()[16].schema(), other.storeAddress);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.storeZipCode)) {
        this.storeZipCode = data().deepCopy(fields()[17].schema(), other.storeZipCode);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.storeCity)) {
        this.storeCity = data().deepCopy(fields()[18].schema(), other.storeCity);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.storePhone)) {
        this.storePhone = data().deepCopy(fields()[19].schema(), other.storePhone);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.barcode)) {
        this.barcode = data().deepCopy(fields()[20].schema(), other.barcode);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.certificationCode)) {
        this.certificationCode = data().deepCopy(fields()[21].schema(), other.certificationCode);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.isDigitalTicket)) {
        this.isDigitalTicket = data().deepCopy(fields()[22].schema(), other.isDigitalTicket);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.companyName)) {
        this.companyName = data().deepCopy(fields()[23].schema(), other.companyName);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.companyVatNumber)) {
        this.companyVatNumber = data().deepCopy(fields()[24].schema(), other.companyVatNumber);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.locale)) {
        this.locale = data().deepCopy(fields()[25].schema(), other.locale);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.encodedCustomerId)) {
        this.encodedCustomerId = data().deepCopy(fields()[26].schema(), other.encodedCustomerId);
        fieldSetFlags()[26] = true;
      }
    }

    /**
      * Gets the value of the 'invoiceDuration' field.
      * @return The value.
      */
    public int getInvoiceDuration() {
      return invoiceDuration;
    }


    /**
      * Sets the value of the 'invoiceDuration' field.
      * @param value The value of 'invoiceDuration'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setInvoiceDuration(int value) {
      validate(fields()[0], value);
      this.invoiceDuration = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'invoiceDuration' field has been set.
      * @return True if the 'invoiceDuration' field has been set, false otherwise.
      */
    public boolean hasInvoiceDuration() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'invoiceDuration' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearInvoiceDuration() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'paymentDuration' field.
      * @return The value.
      */
    public int getPaymentDuration() {
      return paymentDuration;
    }


    /**
      * Sets the value of the 'paymentDuration' field.
      * @param value The value of 'paymentDuration'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setPaymentDuration(int value) {
      validate(fields()[1], value);
      this.paymentDuration = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'paymentDuration' field has been set.
      * @return True if the 'paymentDuration' field has been set, false otherwise.
      */
    public boolean hasPaymentDuration() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'paymentDuration' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearPaymentDuration() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'employeeId' field.
      * @return The value.
      */
    public java.lang.CharSequence getEmployeeId() {
      return employeeId;
    }


    /**
      * Sets the value of the 'employeeId' field.
      * @param value The value of 'employeeId'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setEmployeeId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.employeeId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'employeeId' field has been set.
      * @return True if the 'employeeId' field has been set, false otherwise.
      */
    public boolean hasEmployeeId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'employeeId' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearEmployeeId() {
      employeeId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'ticketHour' field.
      * @return The value.
      */
    public int getTicketHour() {
      return ticketHour;
    }


    /**
      * Sets the value of the 'ticketHour' field.
      * @param value The value of 'ticketHour'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setTicketHour(int value) {
      validate(fields()[3], value);
      this.ticketHour = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'ticketHour' field has been set.
      * @return True if the 'ticketHour' field has been set, false otherwise.
      */
    public boolean hasTicketHour() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'ticketHour' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearTicketHour() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalTicketAmount' field.
      * @return The value.
      */
    public java.lang.CharSequence getTotalTicketAmount() {
      return totalTicketAmount;
    }


    /**
      * Sets the value of the 'totalTicketAmount' field.
      * @param value The value of 'totalTicketAmount'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setTotalTicketAmount(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.totalTicketAmount = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'totalTicketAmount' field has been set.
      * @return True if the 'totalTicketAmount' field has been set, false otherwise.
      */
    public boolean hasTotalTicketAmount() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'totalTicketAmount' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearTotalTicketAmount() {
      totalTicketAmount = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'ticketTypeId' field.
      * @return The value.
      */
    public java.lang.CharSequence getTicketTypeId() {
      return ticketTypeId;
    }


    /**
      * Sets the value of the 'ticketTypeId' field.
      * @param value The value of 'ticketTypeId'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setTicketTypeId(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.ticketTypeId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'ticketTypeId' field has been set.
      * @return True if the 'ticketTypeId' field has been set, false otherwise.
      */
    public boolean hasTicketTypeId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'ticketTypeId' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearTicketTypeId() {
      ticketTypeId = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'OriginStoreTicket' field.
      * @return The value.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.OriginStoreTicket getOriginStoreTicket() {
      return OriginStoreTicket;
    }


    /**
      * Sets the value of the 'OriginStoreTicket' field.
      * @param value The value of 'OriginStoreTicket'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setOriginStoreTicket(org.github.ogomezso.springkafka.infrastructure.model.ticket.OriginStoreTicket value) {
      validate(fields()[6], value);
      this.OriginStoreTicketBuilder = null;
      this.OriginStoreTicket = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'OriginStoreTicket' field has been set.
      * @return True if the 'OriginStoreTicket' field has been set, false otherwise.
      */
    public boolean hasOriginStoreTicket() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'OriginStoreTicket' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.OriginStoreTicket.Builder getOriginStoreTicketBuilder() {
      if (OriginStoreTicketBuilder == null) {
        if (hasOriginStoreTicket()) {
          setOriginStoreTicketBuilder(org.github.ogomezso.springkafka.infrastructure.model.ticket.OriginStoreTicket.newBuilder(OriginStoreTicket));
        } else {
          setOriginStoreTicketBuilder(org.github.ogomezso.springkafka.infrastructure.model.ticket.OriginStoreTicket.newBuilder());
        }
      }
      return OriginStoreTicketBuilder;
    }

    /**
     * Sets the Builder instance for the 'OriginStoreTicket' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setOriginStoreTicketBuilder(org.github.ogomezso.springkafka.infrastructure.model.ticket.OriginStoreTicket.Builder value) {
      clearOriginStoreTicket();
      OriginStoreTicketBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'OriginStoreTicket' field has an active Builder instance
     * @return True if the 'OriginStoreTicket' field has an active Builder instance
     */
    public boolean hasOriginStoreTicketBuilder() {
      return OriginStoreTicketBuilder != null;
    }

    /**
      * Clears the value of the 'OriginStoreTicket' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearOriginStoreTicket() {
      OriginStoreTicket = null;
      OriginStoreTicketBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'returnStoreTicket' field.
      * @return The value.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.ReturnStoreTicket getReturnStoreTicket() {
      return returnStoreTicket;
    }


    /**
      * Sets the value of the 'returnStoreTicket' field.
      * @param value The value of 'returnStoreTicket'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setReturnStoreTicket(org.github.ogomezso.springkafka.infrastructure.model.ticket.ReturnStoreTicket value) {
      validate(fields()[7], value);
      this.returnStoreTicketBuilder = null;
      this.returnStoreTicket = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'returnStoreTicket' field has been set.
      * @return True if the 'returnStoreTicket' field has been set, false otherwise.
      */
    public boolean hasReturnStoreTicket() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'returnStoreTicket' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.ReturnStoreTicket.Builder getReturnStoreTicketBuilder() {
      if (returnStoreTicketBuilder == null) {
        if (hasReturnStoreTicket()) {
          setReturnStoreTicketBuilder(org.github.ogomezso.springkafka.infrastructure.model.ticket.ReturnStoreTicket.newBuilder(returnStoreTicket));
        } else {
          setReturnStoreTicketBuilder(org.github.ogomezso.springkafka.infrastructure.model.ticket.ReturnStoreTicket.newBuilder());
        }
      }
      return returnStoreTicketBuilder;
    }

    /**
     * Sets the Builder instance for the 'returnStoreTicket' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setReturnStoreTicketBuilder(org.github.ogomezso.springkafka.infrastructure.model.ticket.ReturnStoreTicket.Builder value) {
      clearReturnStoreTicket();
      returnStoreTicketBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'returnStoreTicket' field has an active Builder instance
     * @return True if the 'returnStoreTicket' field has an active Builder instance
     */
    public boolean hasReturnStoreTicketBuilder() {
      return returnStoreTicketBuilder != null;
    }

    /**
      * Clears the value of the 'returnStoreTicket' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearReturnStoreTicket() {
      returnStoreTicket = null;
      returnStoreTicketBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'deliveryNotePosId' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeliveryNotePosId() {
      return deliveryNotePosId;
    }


    /**
      * Sets the value of the 'deliveryNotePosId' field.
      * @param value The value of 'deliveryNotePosId'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setDeliveryNotePosId(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.deliveryNotePosId = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'deliveryNotePosId' field has been set.
      * @return True if the 'deliveryNotePosId' field has been set, false otherwise.
      */
    public boolean hasDeliveryNotePosId() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'deliveryNotePosId' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearDeliveryNotePosId() {
      deliveryNotePosId = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'deliveryNoteNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeliveryNoteNumber() {
      return deliveryNoteNumber;
    }


    /**
      * Sets the value of the 'deliveryNoteNumber' field.
      * @param value The value of 'deliveryNoteNumber'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setDeliveryNoteNumber(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.deliveryNoteNumber = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'deliveryNoteNumber' field has been set.
      * @return True if the 'deliveryNoteNumber' field has been set, false otherwise.
      */
    public boolean hasDeliveryNoteNumber() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'deliveryNoteNumber' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearDeliveryNoteNumber() {
      deliveryNoteNumber = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'deliveryNoteDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeliveryNoteDate() {
      return deliveryNoteDate;
    }


    /**
      * Sets the value of the 'deliveryNoteDate' field.
      * @param value The value of 'deliveryNoteDate'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setDeliveryNoteDate(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.deliveryNoteDate = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'deliveryNoteDate' field has been set.
      * @return True if the 'deliveryNoteDate' field has been set, false otherwise.
      */
    public boolean hasDeliveryNoteDate() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'deliveryNoteDate' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearDeliveryNoteDate() {
      deliveryNoteDate = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'teleSalesOrderNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getTeleSalesOrderNumber() {
      return teleSalesOrderNumber;
    }


    /**
      * Sets the value of the 'teleSalesOrderNumber' field.
      * @param value The value of 'teleSalesOrderNumber'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setTeleSalesOrderNumber(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.teleSalesOrderNumber = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'teleSalesOrderNumber' field has been set.
      * @return True if the 'teleSalesOrderNumber' field has been set, false otherwise.
      */
    public boolean hasTeleSalesOrderNumber() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'teleSalesOrderNumber' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearTeleSalesOrderNumber() {
      teleSalesOrderNumber = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'isParked' field.
      * @return The value.
      */
    public boolean getIsParked() {
      return isParked;
    }


    /**
      * Sets the value of the 'isParked' field.
      * @param value The value of 'isParked'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setIsParked(boolean value) {
      validate(fields()[12], value);
      this.isParked = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'isParked' field has been set.
      * @return True if the 'isParked' field has been set, false otherwise.
      */
    public boolean hasIsParked() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'isParked' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearIsParked() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'transactionTypeId' field.
      * @return The value.
      */
    public java.lang.CharSequence getTransactionTypeId() {
      return transactionTypeId;
    }


    /**
      * Sets the value of the 'transactionTypeId' field.
      * @param value The value of 'transactionTypeId'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setTransactionTypeId(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.transactionTypeId = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'transactionTypeId' field has been set.
      * @return True if the 'transactionTypeId' field has been set, false otherwise.
      */
    public boolean hasTransactionTypeId() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'transactionTypeId' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearTransactionTypeId() {
      transactionTypeId = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'salesChannelId' field.
      * @return The value.
      */
    public java.lang.CharSequence getSalesChannelId() {
      return salesChannelId;
    }


    /**
      * Sets the value of the 'salesChannelId' field.
      * @param value The value of 'salesChannelId'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setSalesChannelId(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.salesChannelId = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'salesChannelId' field has been set.
      * @return True if the 'salesChannelId' field has been set, false otherwise.
      */
    public boolean hasSalesChannelId() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'salesChannelId' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearSalesChannelId() {
      salesChannelId = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'storeTypeId' field.
      * @return The value.
      */
    public java.lang.CharSequence getStoreTypeId() {
      return storeTypeId;
    }


    /**
      * Sets the value of the 'storeTypeId' field.
      * @param value The value of 'storeTypeId'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setStoreTypeId(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.storeTypeId = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'storeTypeId' field has been set.
      * @return True if the 'storeTypeId' field has been set, false otherwise.
      */
    public boolean hasStoreTypeId() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'storeTypeId' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearStoreTypeId() {
      storeTypeId = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'storeAddress' field.
      * @return The value.
      */
    public java.lang.CharSequence getStoreAddress() {
      return storeAddress;
    }


    /**
      * Sets the value of the 'storeAddress' field.
      * @param value The value of 'storeAddress'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setStoreAddress(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.storeAddress = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'storeAddress' field has been set.
      * @return True if the 'storeAddress' field has been set, false otherwise.
      */
    public boolean hasStoreAddress() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'storeAddress' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearStoreAddress() {
      storeAddress = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'storeZipCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getStoreZipCode() {
      return storeZipCode;
    }


    /**
      * Sets the value of the 'storeZipCode' field.
      * @param value The value of 'storeZipCode'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setStoreZipCode(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.storeZipCode = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'storeZipCode' field has been set.
      * @return True if the 'storeZipCode' field has been set, false otherwise.
      */
    public boolean hasStoreZipCode() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'storeZipCode' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearStoreZipCode() {
      storeZipCode = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'storeCity' field.
      * @return The value.
      */
    public java.lang.CharSequence getStoreCity() {
      return storeCity;
    }


    /**
      * Sets the value of the 'storeCity' field.
      * @param value The value of 'storeCity'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setStoreCity(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.storeCity = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'storeCity' field has been set.
      * @return True if the 'storeCity' field has been set, false otherwise.
      */
    public boolean hasStoreCity() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'storeCity' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearStoreCity() {
      storeCity = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'storePhone' field.
      * @return The value.
      */
    public java.lang.CharSequence getStorePhone() {
      return storePhone;
    }


    /**
      * Sets the value of the 'storePhone' field.
      * @param value The value of 'storePhone'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setStorePhone(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.storePhone = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'storePhone' field has been set.
      * @return True if the 'storePhone' field has been set, false otherwise.
      */
    public boolean hasStorePhone() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'storePhone' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearStorePhone() {
      storePhone = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'barcode' field.
      * @return The value.
      */
    public java.lang.CharSequence getBarcode() {
      return barcode;
    }


    /**
      * Sets the value of the 'barcode' field.
      * @param value The value of 'barcode'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setBarcode(java.lang.CharSequence value) {
      validate(fields()[20], value);
      this.barcode = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'barcode' field has been set.
      * @return True if the 'barcode' field has been set, false otherwise.
      */
    public boolean hasBarcode() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'barcode' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearBarcode() {
      barcode = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'certificationCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getCertificationCode() {
      return certificationCode;
    }


    /**
      * Sets the value of the 'certificationCode' field.
      * @param value The value of 'certificationCode'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setCertificationCode(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.certificationCode = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'certificationCode' field has been set.
      * @return True if the 'certificationCode' field has been set, false otherwise.
      */
    public boolean hasCertificationCode() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'certificationCode' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearCertificationCode() {
      certificationCode = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'isDigitalTicket' field.
      * @return The value.
      */
    public boolean getIsDigitalTicket() {
      return isDigitalTicket;
    }


    /**
      * Sets the value of the 'isDigitalTicket' field.
      * @param value The value of 'isDigitalTicket'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setIsDigitalTicket(boolean value) {
      validate(fields()[22], value);
      this.isDigitalTicket = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'isDigitalTicket' field has been set.
      * @return True if the 'isDigitalTicket' field has been set, false otherwise.
      */
    public boolean hasIsDigitalTicket() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'isDigitalTicket' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearIsDigitalTicket() {
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'companyName' field.
      * @return The value.
      */
    public java.lang.CharSequence getCompanyName() {
      return companyName;
    }


    /**
      * Sets the value of the 'companyName' field.
      * @param value The value of 'companyName'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setCompanyName(java.lang.CharSequence value) {
      validate(fields()[23], value);
      this.companyName = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'companyName' field has been set.
      * @return True if the 'companyName' field has been set, false otherwise.
      */
    public boolean hasCompanyName() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'companyName' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearCompanyName() {
      companyName = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'companyVatNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getCompanyVatNumber() {
      return companyVatNumber;
    }


    /**
      * Sets the value of the 'companyVatNumber' field.
      * @param value The value of 'companyVatNumber'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setCompanyVatNumber(java.lang.CharSequence value) {
      validate(fields()[24], value);
      this.companyVatNumber = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'companyVatNumber' field has been set.
      * @return True if the 'companyVatNumber' field has been set, false otherwise.
      */
    public boolean hasCompanyVatNumber() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'companyVatNumber' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearCompanyVatNumber() {
      companyVatNumber = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'locale' field.
      * @return The value.
      */
    public java.lang.CharSequence getLocale() {
      return locale;
    }


    /**
      * Sets the value of the 'locale' field.
      * @param value The value of 'locale'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setLocale(java.lang.CharSequence value) {
      validate(fields()[25], value);
      this.locale = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'locale' field has been set.
      * @return True if the 'locale' field has been set, false otherwise.
      */
    public boolean hasLocale() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'locale' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearLocale() {
      locale = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'encodedCustomerId' field.
      * @return The value.
      */
    public java.lang.CharSequence getEncodedCustomerId() {
      return encodedCustomerId;
    }


    /**
      * Sets the value of the 'encodedCustomerId' field.
      * @param value The value of 'encodedCustomerId'.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder setEncodedCustomerId(java.lang.CharSequence value) {
      validate(fields()[26], value);
      this.encodedCustomerId = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'encodedCustomerId' field has been set.
      * @return True if the 'encodedCustomerId' field has been set, false otherwise.
      */
    public boolean hasEncodedCustomerId() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'encodedCustomerId' field.
      * @return This builder.
      */
    public org.github.ogomezso.springkafka.infrastructure.model.ticket.Header.Builder clearEncodedCustomerId() {
      encodedCustomerId = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Header build() {
      try {
        Header record = new Header();
        record.invoiceDuration = fieldSetFlags()[0] ? this.invoiceDuration : (java.lang.Integer) defaultValue(fields()[0]);
        record.paymentDuration = fieldSetFlags()[1] ? this.paymentDuration : (java.lang.Integer) defaultValue(fields()[1]);
        record.employeeId = fieldSetFlags()[2] ? this.employeeId : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.ticketHour = fieldSetFlags()[3] ? this.ticketHour : (java.lang.Integer) defaultValue(fields()[3]);
        record.totalTicketAmount = fieldSetFlags()[4] ? this.totalTicketAmount : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.ticketTypeId = fieldSetFlags()[5] ? this.ticketTypeId : (java.lang.CharSequence) defaultValue(fields()[5]);
        if (OriginStoreTicketBuilder != null) {
          try {
            record.OriginStoreTicket = this.OriginStoreTicketBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("OriginStoreTicket"));
            throw e;
          }
        } else {
          record.OriginStoreTicket = fieldSetFlags()[6] ? this.OriginStoreTicket : (org.github.ogomezso.springkafka.infrastructure.model.ticket.OriginStoreTicket) defaultValue(fields()[6]);
        }
        if (returnStoreTicketBuilder != null) {
          try {
            record.returnStoreTicket = this.returnStoreTicketBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("returnStoreTicket"));
            throw e;
          }
        } else {
          record.returnStoreTicket = fieldSetFlags()[7] ? this.returnStoreTicket : (org.github.ogomezso.springkafka.infrastructure.model.ticket.ReturnStoreTicket) defaultValue(fields()[7]);
        }
        record.deliveryNotePosId = fieldSetFlags()[8] ? this.deliveryNotePosId : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.deliveryNoteNumber = fieldSetFlags()[9] ? this.deliveryNoteNumber : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.deliveryNoteDate = fieldSetFlags()[10] ? this.deliveryNoteDate : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.teleSalesOrderNumber = fieldSetFlags()[11] ? this.teleSalesOrderNumber : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.isParked = fieldSetFlags()[12] ? this.isParked : (java.lang.Boolean) defaultValue(fields()[12]);
        record.transactionTypeId = fieldSetFlags()[13] ? this.transactionTypeId : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.salesChannelId = fieldSetFlags()[14] ? this.salesChannelId : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.storeTypeId = fieldSetFlags()[15] ? this.storeTypeId : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.storeAddress = fieldSetFlags()[16] ? this.storeAddress : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.storeZipCode = fieldSetFlags()[17] ? this.storeZipCode : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.storeCity = fieldSetFlags()[18] ? this.storeCity : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.storePhone = fieldSetFlags()[19] ? this.storePhone : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.barcode = fieldSetFlags()[20] ? this.barcode : (java.lang.CharSequence) defaultValue(fields()[20]);
        record.certificationCode = fieldSetFlags()[21] ? this.certificationCode : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.isDigitalTicket = fieldSetFlags()[22] ? this.isDigitalTicket : (java.lang.Boolean) defaultValue(fields()[22]);
        record.companyName = fieldSetFlags()[23] ? this.companyName : (java.lang.CharSequence) defaultValue(fields()[23]);
        record.companyVatNumber = fieldSetFlags()[24] ? this.companyVatNumber : (java.lang.CharSequence) defaultValue(fields()[24]);
        record.locale = fieldSetFlags()[25] ? this.locale : (java.lang.CharSequence) defaultValue(fields()[25]);
        record.encodedCustomerId = fieldSetFlags()[26] ? this.encodedCustomerId : (java.lang.CharSequence) defaultValue(fields()[26]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Header>
    WRITER$ = (org.apache.avro.io.DatumWriter<Header>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Header>
    READER$ = (org.apache.avro.io.DatumReader<Header>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.invoiceDuration);

    out.writeInt(this.paymentDuration);

    out.writeString(this.employeeId);

    out.writeInt(this.ticketHour);

    out.writeString(this.totalTicketAmount);

    out.writeString(this.ticketTypeId);

    this.OriginStoreTicket.customEncode(out);

    this.returnStoreTicket.customEncode(out);

    out.writeString(this.deliveryNotePosId);

    out.writeString(this.deliveryNoteNumber);

    out.writeString(this.deliveryNoteDate);

    out.writeString(this.teleSalesOrderNumber);

    out.writeBoolean(this.isParked);

    out.writeString(this.transactionTypeId);

    out.writeString(this.salesChannelId);

    out.writeString(this.storeTypeId);

    out.writeString(this.storeAddress);

    out.writeString(this.storeZipCode);

    out.writeString(this.storeCity);

    out.writeString(this.storePhone);

    out.writeString(this.barcode);

    out.writeString(this.certificationCode);

    out.writeBoolean(this.isDigitalTicket);

    out.writeString(this.companyName);

    out.writeString(this.companyVatNumber);

    out.writeString(this.locale);

    out.writeString(this.encodedCustomerId);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.invoiceDuration = in.readInt();

      this.paymentDuration = in.readInt();

      this.employeeId = in.readString(this.employeeId instanceof Utf8 ? (Utf8)this.employeeId : null);

      this.ticketHour = in.readInt();

      this.totalTicketAmount = in.readString(this.totalTicketAmount instanceof Utf8 ? (Utf8)this.totalTicketAmount : null);

      this.ticketTypeId = in.readString(this.ticketTypeId instanceof Utf8 ? (Utf8)this.ticketTypeId : null);

      if (this.OriginStoreTicket == null) {
        this.OriginStoreTicket = new org.github.ogomezso.springkafka.infrastructure.model.ticket.OriginStoreTicket();
      }
      this.OriginStoreTicket.customDecode(in);

      if (this.returnStoreTicket == null) {
        this.returnStoreTicket = new org.github.ogomezso.springkafka.infrastructure.model.ticket.ReturnStoreTicket();
      }
      this.returnStoreTicket.customDecode(in);

      this.deliveryNotePosId = in.readString(this.deliveryNotePosId instanceof Utf8 ? (Utf8)this.deliveryNotePosId : null);

      this.deliveryNoteNumber = in.readString(this.deliveryNoteNumber instanceof Utf8 ? (Utf8)this.deliveryNoteNumber : null);

      this.deliveryNoteDate = in.readString(this.deliveryNoteDate instanceof Utf8 ? (Utf8)this.deliveryNoteDate : null);

      this.teleSalesOrderNumber = in.readString(this.teleSalesOrderNumber instanceof Utf8 ? (Utf8)this.teleSalesOrderNumber : null);

      this.isParked = in.readBoolean();

      this.transactionTypeId = in.readString(this.transactionTypeId instanceof Utf8 ? (Utf8)this.transactionTypeId : null);

      this.salesChannelId = in.readString(this.salesChannelId instanceof Utf8 ? (Utf8)this.salesChannelId : null);

      this.storeTypeId = in.readString(this.storeTypeId instanceof Utf8 ? (Utf8)this.storeTypeId : null);

      this.storeAddress = in.readString(this.storeAddress instanceof Utf8 ? (Utf8)this.storeAddress : null);

      this.storeZipCode = in.readString(this.storeZipCode instanceof Utf8 ? (Utf8)this.storeZipCode : null);

      this.storeCity = in.readString(this.storeCity instanceof Utf8 ? (Utf8)this.storeCity : null);

      this.storePhone = in.readString(this.storePhone instanceof Utf8 ? (Utf8)this.storePhone : null);

      this.barcode = in.readString(this.barcode instanceof Utf8 ? (Utf8)this.barcode : null);

      this.certificationCode = in.readString(this.certificationCode instanceof Utf8 ? (Utf8)this.certificationCode : null);

      this.isDigitalTicket = in.readBoolean();

      this.companyName = in.readString(this.companyName instanceof Utf8 ? (Utf8)this.companyName : null);

      this.companyVatNumber = in.readString(this.companyVatNumber instanceof Utf8 ? (Utf8)this.companyVatNumber : null);

      this.locale = in.readString(this.locale instanceof Utf8 ? (Utf8)this.locale : null);

      this.encodedCustomerId = in.readString(this.encodedCustomerId instanceof Utf8 ? (Utf8)this.encodedCustomerId : null);

    } else {
      for (int i = 0; i < 27; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.invoiceDuration = in.readInt();
          break;

        case 1:
          this.paymentDuration = in.readInt();
          break;

        case 2:
          this.employeeId = in.readString(this.employeeId instanceof Utf8 ? (Utf8)this.employeeId : null);
          break;

        case 3:
          this.ticketHour = in.readInt();
          break;

        case 4:
          this.totalTicketAmount = in.readString(this.totalTicketAmount instanceof Utf8 ? (Utf8)this.totalTicketAmount : null);
          break;

        case 5:
          this.ticketTypeId = in.readString(this.ticketTypeId instanceof Utf8 ? (Utf8)this.ticketTypeId : null);
          break;

        case 6:
          if (this.OriginStoreTicket == null) {
            this.OriginStoreTicket = new org.github.ogomezso.springkafka.infrastructure.model.ticket.OriginStoreTicket();
          }
          this.OriginStoreTicket.customDecode(in);
          break;

        case 7:
          if (this.returnStoreTicket == null) {
            this.returnStoreTicket = new org.github.ogomezso.springkafka.infrastructure.model.ticket.ReturnStoreTicket();
          }
          this.returnStoreTicket.customDecode(in);
          break;

        case 8:
          this.deliveryNotePosId = in.readString(this.deliveryNotePosId instanceof Utf8 ? (Utf8)this.deliveryNotePosId : null);
          break;

        case 9:
          this.deliveryNoteNumber = in.readString(this.deliveryNoteNumber instanceof Utf8 ? (Utf8)this.deliveryNoteNumber : null);
          break;

        case 10:
          this.deliveryNoteDate = in.readString(this.deliveryNoteDate instanceof Utf8 ? (Utf8)this.deliveryNoteDate : null);
          break;

        case 11:
          this.teleSalesOrderNumber = in.readString(this.teleSalesOrderNumber instanceof Utf8 ? (Utf8)this.teleSalesOrderNumber : null);
          break;

        case 12:
          this.isParked = in.readBoolean();
          break;

        case 13:
          this.transactionTypeId = in.readString(this.transactionTypeId instanceof Utf8 ? (Utf8)this.transactionTypeId : null);
          break;

        case 14:
          this.salesChannelId = in.readString(this.salesChannelId instanceof Utf8 ? (Utf8)this.salesChannelId : null);
          break;

        case 15:
          this.storeTypeId = in.readString(this.storeTypeId instanceof Utf8 ? (Utf8)this.storeTypeId : null);
          break;

        case 16:
          this.storeAddress = in.readString(this.storeAddress instanceof Utf8 ? (Utf8)this.storeAddress : null);
          break;

        case 17:
          this.storeZipCode = in.readString(this.storeZipCode instanceof Utf8 ? (Utf8)this.storeZipCode : null);
          break;

        case 18:
          this.storeCity = in.readString(this.storeCity instanceof Utf8 ? (Utf8)this.storeCity : null);
          break;

        case 19:
          this.storePhone = in.readString(this.storePhone instanceof Utf8 ? (Utf8)this.storePhone : null);
          break;

        case 20:
          this.barcode = in.readString(this.barcode instanceof Utf8 ? (Utf8)this.barcode : null);
          break;

        case 21:
          this.certificationCode = in.readString(this.certificationCode instanceof Utf8 ? (Utf8)this.certificationCode : null);
          break;

        case 22:
          this.isDigitalTicket = in.readBoolean();
          break;

        case 23:
          this.companyName = in.readString(this.companyName instanceof Utf8 ? (Utf8)this.companyName : null);
          break;

        case 24:
          this.companyVatNumber = in.readString(this.companyVatNumber instanceof Utf8 ? (Utf8)this.companyVatNumber : null);
          break;

        case 25:
          this.locale = in.readString(this.locale instanceof Utf8 ? (Utf8)this.locale : null);
          break;

        case 26:
          this.encodedCustomerId = in.readString(this.encodedCustomerId instanceof Utf8 ? (Utf8)this.encodedCustomerId : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










